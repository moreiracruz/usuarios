name: CI/CD Pipeline

on:
  push:
    branches: ['**']  # Executa em qualquer branch
    tags: ['*-RELEASE']  # Trigger para tags de release
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  JAR_FILE: target/*.jar

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necess√°rio para o maven-release-plugin

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Build and Test
        run: mvn -B clean verify

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: target/

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: target
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            JAR_FILE=${{ env.JAR_FILE }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  release:
    needs: [build-test, docker]
    if: startsWith(github.ref, 'refs/tags/') && endsWith(github.ref, '-RELEASE')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Setup Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.9.6

      - name: Release Prepare
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          RELEASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
          NEXT_VERSION=$(echo $RELEASE_VERSION | awk -F. '{$NF = $NF + 1; print $0}' | tr ' ' '.').0-SNAPSHOT
          
          mvn versions:set -DnewVersion=$RELEASE_VERSION
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -am "Release $RELEASE_VERSION [ci skip]"
          git tag -a $RELEASE_VERSION-RELEASE -m "Release $RELEASE_VERSION"

      - name: Release Perform
        run: |
          git push origin $RELEASE_VERSION-RELEASE
          git push origin HEAD:main

      - name: Update to Next Snapshot
        run: |
          mvn versions:set -DnewVersion=$NEXT_VERSION
          git commit -am "Prepare for next development iteration [ci skip]"
          git push origin HEAD:main