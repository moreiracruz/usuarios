name: CI/CD Pipeline

on:
  push:
    branches: ['**']  # Executa em qualquer branch
    tags: ['*-RELEASE']  # Trigger para tags de release
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  JAR_FILE: target/*.jar

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necess√°rio para o maven-release-plugin

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Build and Test
        run: mvn -B clean verify

      - name: Upload Coverage Report
        uses: actions/upload-artifact@main
        with:
          name: coverage-report
          path: target/site/jacoco/

      - name: Upload Coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: target/site/jacoco/jacoco.xml
          repo-token: ${{ secrets.COVERALLS_REPO_TOKEN }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: target/

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: target
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            JAR_FILE=${{ env.JAR_FILE }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

release:
  needs: build-test
  runs-on: ubuntu-latest
  permissions:
    contents: write
    packages: write
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin
        server-id: github
        server-username: ${{ github.actor }}
        server-password: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Maven
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.9.6

    - name: Release Prepare
      run: |
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        RELEASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
        NEXT_VERSION=$(echo $RELEASE_VERSION | awk -F. 'BEGIN{OFS="."}{$NF+=1; print $0}').0-SNAPSHOT
        
        mvn release:prepare -B \
          -DreleaseVersion="$RELEASE_VERSION" \
          -DdevelopmentVersion="$NEXT_VERSION" \
          -Dtag="v${RELEASE_VERSION}-RELEASE" \
          -DpushChanges=false \
          -Darguments="-DskipTests"

    - name: Release Perform
      run: mvn release:perform -B -Darguments="-DskipTests"
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}